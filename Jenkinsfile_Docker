pipeline {
    // Set agent to 'none' at the pipeline level to allow per-stage agents
    agent none

    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
    }

    stages {
        stage('Initialize Variables') {
            // Run this stage on the Jenkins host
            agent any
            steps {
                sh 'id -u'
                sh 'id -g'
                sh 'echo "Jenkins user/group ID: $(id -u):$(id -g)"'
            }
        }

        stage('Checkout Source') {
            // Run this stage on the Jenkins host
            agent any
            steps {
                echo 'Checking out source code from SCM...'
                checkout scm
            }
        }

        stage('Install Dependencies & Package Application') {
            // All steps now run in a single container
            agent any
            steps {
                echo 'Installing dependencies and packaging application...'
                withDockerContainer(image: 'public.ecr.aws/lambda/python:3.10', args: '-u root --entrypoint=') {
                    // Install the zip utility as the root user
                    sh 'yum update -y && yum install -y zip'

                    // Install Python dependencies
                    sh 'mkdir -p dependencies/python'
                    dir('dependencies/python') {
                        sh 'pip install --target . -r ../../pdf_converter_FastAPI_app/requirements.txt'
                    }

                    // Package application code (excluding the 'package' dir) and dependencies separately
                    echo 'Packaging application code...'
                    dir('pdf_converter_FastAPI_app') {
                        sh 'zip -r ../pdf_converter_app.zip .'
                    }

                    echo 'Packaging dependencies layer...'
                    dir('dependencies') {
                        sh 'zip -r ../dependencies.zip .'
                    }
                }
            }
        }

        stage('Terraform Init & Apply') {
            // Run this stage on the Jenkins host
            agent any
            steps {
                script {
                    echo 'Initializing Terraform...'
                    sh 'terraform -chdir=terraform init'

                    echo 'Applying Terraform configuration...'
                    // Calculate file hashes
                    def appCodeHash = sh(script: "sha256sum pdf_converter_app.zip | awk '{print \$1}'", returnStdout: true).trim()
                    def dependenciesCodeHash = sh(script: "sha256sum dependencies.zip | awk '{print \$1}'", returnStdout: true).trim()

                    // Pass hashes to Terraform as variables
                    sh "terraform -chdir=terraform apply -auto-approve -var='app_zip_file_name=pdf_converter_app.zip' -var='app_code_hash=${appCodeHash}' -var='dependencies_zip_file_name=dependencies.zip' -var='dependencies_code_hash=${dependenciesCodeHash}'"
                }
            }
        }

        stage('Post-Deployment Info') {
            // Run this stage on the Jenkins host
            agent any
            steps {
                script {
                    echo 'Gathering post-deployment information...'
                    def apiEndpoint = sh(script: 'terraform -chdir=terraform output -raw api_gateway_url', returnStdout: true).trim()
                    echo "API Gateway Endpoint: ${apiEndpoint}"
                }
            }
        }
    }
    post {
        failure {
            echo "Pipeline failed! Check logs for errors."
        }
    }
}
