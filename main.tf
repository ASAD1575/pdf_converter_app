terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 6.6.0"
    }
  }
}

# Configure the AWS provider
provider "aws" {
  region = "us-east-1"
}

# Define the variables that will be passed from Jenkins
variable "app_zip_file_name" {
  type = string
}

variable "app_code_hash" {
  type = string
}

variable "dependencies_zip_file_name" {
  type = string
}

variable "dependencies_code_hash" {
  type = string
}

module "vpc" {
  source = "./modules/vpc"
  cidr_block = "10.0.0.0/16"
  region = "us-east-1"
}

module "security_group" {
  source = "./modules/security_group"
  vpc_id = module.vpc.vpc_id
}

module "rds" {
  source            = "./modules/rds"
  region            = "us-east-1"
  identifier        = "pdfconverterdb"
  instance_class    = "db.t3.micro"
  engine            = "postgres"
  engine_version    = "14"
  database_name     = "pdfconverterdb"
  db_username       = "dbuser"
  db_password       = "Subhani786"
  port              = 5432
  security_group    = module.security_group.app_sg_id
  db_subnet_ids     = module.vpc.private_subnet_ids
}

module "lambda_function" {
  source                    = "./modules/lambda"
  region                    = "us-east-1"
  function_name             = "pdfconverter"
  private_subnet_ids        = module.vpc.private_subnet_ids
  app_security_group_id     = module.security_group.app_security_group_id
  libreoffice_layer_arn     = "arn:aws:lambda:us-east-1:764866452798:layer:libreoffice-gzip:1"
  db_host                   = module.rds.rds_endpoint
  db_name                   = module.rds.db_name
  db_password               = module.rds.db_password
  db_port                   = module.rds.db_port
  db_user                   = module.rds.db_username
  s3_bucket_name            = "pdflambdabucket1575"

  # Pass the new variables from the root module to the child module.
  app_zip_file_name          = var.app_zip_file_name
  app_code_hash              = var.app_code_hash
  dependencies_zip_file_name = var.dependencies_zip_file_name
  dependencies_code_hash     = var.dependencies_code_hash
}

module "api_gateway" {
  source               = "./modules/api_gateway"
  region               = "us-east-1"
  api_name             = "pdf-converter-api"
  lambda_function_name = module.lambda_function.function_name
  lambda_function_arn  = module.lambda_function.function_arn
  lambda_function_invoke_arn = module.lambda_function.function_invoke_arn
}

module "cloudwatch" {
  source                = "./modules/cloudwatch"
  region                = "us-east-1"
  function_name         = module.lambda_function.function_name
  log_retention_in_days = 7
  environment           = "dev"
}

resource "null_resource" "update_local_env" {
  depends_on = [
    module.rds,
    module.api_gateway,
  ]

  provisioner "local-exec" {
    command = <<-EOT
      echo "Writing environment variables to ./pdf_converter_FastAPI_app/.env"
      cat << EOF > ./pdf_converter_FastAPI_app/.env
      # Environment variables for PDF Converter FastAPI App
      # Generated by Terraform output script

      DB_HOST="${module.rds.rds_endpoint}"
      DB_NAME="${module.rds.db_name}"
      DB_USER="${module.rds.db_username}"
      DB_PASSWORD="${module.rds.db_password}"
      DB_PORT="${module.rds.db_port}"
      EOF
      echo "Successfully updated ./pdf_converter_FastAPI_app/.env"
    EOT
  }
}
