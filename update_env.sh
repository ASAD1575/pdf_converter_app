#!/bin/bash
# Enable verbose debugging output for the script
set -x

# --- Configuration ---
# Path to your application's .env file relative to this script's location
APP_ENV_FILE="./pdf_converter_FastAPI_app/.env" # Ensure this path is correct based on your project structure

# --- Script Logic ---

echo "Starting to update application .env file from Terraform outputs..."
echo "Current working directory: $(pwd)"
echo "Script path: $0"
echo "Number of arguments received: $#"
echo "Arguments:"
for i in "$@"; do
  echo "  - $i"
done

# Check if all required arguments are provided (now 6 arguments)
if [ "$#" -ne 6 ]; then
    echo "Error: Incorrect number of arguments."
    echo "Usage: $0 <DB_HOST> <DB_NAME> <DB_USER> <DB_PASSWORD> <DB_PORT> <S3_BUCKET_NAME>"
    exit 1
fi

DB_HOST="$1"
DB_NAME="$2"
DB_USER="$3"
DB_PASSWORD="$4"
DB_PORT="$5"
S3_BUCKET_NAME="$6"

# Create or overwrite the .env file
echo "Writing environment variables to $APP_ENV_FILE"
cat << EOF > "$APP_ENV_FILE"
# Environment variables for PDF Converter FastAPI App
# Generated by Terraform output script

DB_HOST="$DB_HOST"
DB_NAME="$DB_NAME"
DB_USER="$DB_USER"
DB_PASSWORD="$DB_PASSWORD"
DB_PORT="$DB_PORT"
S3_BUCKET_NAME="$S3_BUCKET_NAME"

# API_GATEWAY_URL is typically used for client-side configuration,
# not usually needed by the backend app itself in .env for local run.
# If your local app needs it, you would need to add it as an argument to this script.
# API_GATEWAY_URL="<YOUR_API_GATEWAY_URL>"

EOF

echo "Successfully updated $APP_ENV_FILE"
echo "Remember to re-activate your Python virtual environment or restart your application for changes to take effect."
echo "WARNING: DB_PASSWORD is now in your .env file. Ensure this file is NOT committed to version control."
